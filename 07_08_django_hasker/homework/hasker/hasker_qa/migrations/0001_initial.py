# Generated by Django 2.2.1 on 2019-05-26 16:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Provide answer for a question.')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('correct_answer', models.NullBooleanField(default=False, help_text='Choose correct answer.')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Describe your question title.', max_length=255)),
                ('text', models.TextField(help_text='Describe your question body.')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(help_text='Choice tags for your question.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Tag name.', max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionVoteUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sign', models.SmallIntegerField(choices=[(1, 'Plus'), (-1, 'Minus')])),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hasker_qa.Question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='Choice tags for your question.', to='hasker_qa.Tag'),
        ),
        migrations.AddField(
            model_name='question',
            name='vote',
            field=models.ManyToManyField(help_text='Vote for a question.', related_name='voted_questions_set', related_query_name='voted_questions', through='hasker_qa.QuestionVoteUser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AnswerVoteUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sign', models.SmallIntegerField(choices=[(1, 'Plus'), (-1, 'Minus')])),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hasker_qa.Answer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='hasker_qa.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='vote',
            field=models.ManyToManyField(help_text='Vote for a question.', related_name='voted_answers_set', related_query_name='voted_answers', through='hasker_qa.AnswerVoteUser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='questionvoteuser',
            constraint=models.UniqueConstraint(fields=('entity', 'user'), name='unique_question_user'),
        ),
        migrations.AddConstraint(
            model_name='answervoteuser',
            constraint=models.UniqueConstraint(fields=('entity', 'user'), name='unique_answer_user'),
        ),
    ]
